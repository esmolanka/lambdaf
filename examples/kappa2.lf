;; Calculate the mean of an array, fused version:
;; let (s, l) = foldl (\x (s, l) -> (s + x, l + 1)) (0, 0) xs in s / l

(let
  ([avg                       ;; host language let-binding
     (kappa (xs)              ;; computation that captures a vector
       (^const 0)             ;; push an initial sum
       (^const 0)             ;; push an initial length
       xs                     ;; push an input vector
       (^fold                 ;; invoke a second-order fold combinator
         (kappa (x s l)       ;; parameterised by a function that pops an element and two accumulators
           (^const 1) l ^add  ;; push an updated length (we have to push in reverse order)
           x s ^add))         ;; push an updated sum
       ^div                   ;; divide the result of the fold -- sum / length
     )])
  (kappa ()
     (^vector [100 200 135])  ;; push an example vector
     avg                      ;; insert a computation from the let-binding
  ))
